"use strict";

let a = 5; // Создаю переменную и присваиваю ей значение 5.
let b = a; // Создаю переменную и присваиваю ей значение того, что лежит в переменной a.

b = b + 5; // Увеличиваю значение переменной b на 5.
b += 3; // Увеличиваю значение переменной b на 3.

console.log(a); // Вывожу на экран значение перменной a.
console.log(b); // Вывожу на экран значение переменной b.

let obj = { // Создаю объект, который имеет 2 свойства.
    a: 5, // Создаю свойство a и присваиваю ему значение 5.
    b: 1 // Создаю свойство b и присваиваю ему значение 1.
};

let copy = obj; // Создаю переменную, которая будет являть ССЫЛКОЙ на объект.
copy.a = 356; // Изменяю значение ссылки объекта obj, следовательно изменяется само значение obj.

console.log(obj.a); // Вывожу на экран свойство объекта obj, переменню, которую я изменил через ССЫЛКУ.

function copyobj (mainObj) { // Вот тут я создаю функцию, которая принимает на вход один параметр.
    let newObj = {}; // Вот тут я создаю пустой объект.
    for (let i in mainObj) { // Вот тут я пробегаюсь циклом по тому объекту, который есть в параметрах.
        newObj[i] = mainObj[i]; // Вот тут я присваиваю значение новому пустому объекту те, что указаны в объекте из параметров.
    }
    return newObj; /* Вот тут я возвращаю этот новый объект, который уже НЕ является ссылкой на другой 
объект, НО ТОЛЬКО В ТОМ СЛУЧАЕ, если этот новый объект внутри себя не имеет другой объект. Иначе он 
будет являть ссылкой. */
}

let copiedObj = copyobj(obj); /* Создаю переменную и присваиваю ей значение, которые вернет функция copyobj,
в параметрах которой указан объект. */
copiedObj.a = 323; // Меняю свойство только что созданного объекта на 323.
console.log(copiedObj); // Вывожу на экран только что созданный объект.
console.log(obj); // Вывожу на экран объект, созданный ранее (obj).

let obj1 = { // Создаю я объект.
    a: 1, // Даю ему свойства и значения.
    b: 2, // Даю ему свойства и значения.
    c: 3 // Даю ему свойства и значения.
};

let obj2 = { // Создаю ещё один объект.
    d: 4, // Даю ему свойства и значения.
    e: 5, // Даю ему свойства и значения.
    f: 6 // Даю ему свойства и значения.
}

console.log(Object.assign(obj1, obj2)); // И теперь я объединяю эти 2 объекта и вывожу их на экран.
// Метод assig делает почти то же самое, что и функция copyObj, которую я создал выше. 
// Всё то, что будет в новом объекте НЕ будет являть ссылкой на другой объект, но ТОЛЬКО В ТОМ СЛУЧАЕ,
// Если этот объект не содержит вложенных объектов.


// С массивами абсолютно та же самая история.
let testarr = [1, 2, 3, 4, 5, 6, 7, 8]; // Вот я создаю массив testarr.
let test = testarr; // Создаю переменную, которая будет являться ССЫЛКОЙ на массив testarr.
test[0] = "Hello world"; // И теперь изменяя значения у test2, изменяется значение у testarr.
console.log(testarr); // Выбрасываю в консоль значение массива testarr.

let testarr2 = [1, 2, 3, 4, 5, 5, 6, 7, 8]; // Создаю массив.
let test2 = testarr2.slice(); // Создаю переменную, которая будет равняться уже НЕ ссылке, а КОПИИ массива.
test2[0] = "Hello world"; // Указываю, что самое первое значение элемента массива test2 будет равное строке.
console.log(testarr2); // Выбрасываю в консоль массив testarr2.
console.log(test2); // Выбрасываю в консоль массив test2.

let video = ["youtube", "vimeo", "rutube"], // Я создаю массив, в котором есть 3 элемента.
    blogs = ["wordpress", "livejournal", "blogger"], // Созда ещё один с 3мя элементами.
    internet = [...video, ...blogs, "vk", "facebook"]; /* Создаю массив, в котором РАЗВОРАЧИВАЮ 
2 массива video и blogs, причем я на них НЕ ссылаюсь, а можно сказать копирую, словно методом slice. */
console.log(internet); // Вывожу на экран массив internet.